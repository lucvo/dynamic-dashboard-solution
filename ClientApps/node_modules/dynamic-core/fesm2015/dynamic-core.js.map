{"version":3,"file":"dynamic-core.js","sources":["../../dynamic-framework/projects/dynamic-core/src/lib/services/base-settings.service.ts","../../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/dynamic-layout.service.ts","../../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/layout-outlet.directive.ts","../../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/mapped-modules.interface.ts","../../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/BaseLayoutComponent.ts","../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/master-layout/layout.component.ts","../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/template-card/template-card.component.ts","../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/template-card/template-card.container.ts","../../dynamic-framework/projects/dynamic-core/src/lib/dynamic-layout/dynamic-layout.module.ts","../../../../dynamic-framework/projects/dynamic-core/src/public-api.ts","../../../../dynamic-framework/projects/dynamic-core/src/dynamic-core.ts"],"sourcesContent":["import { AbstractClassPart } from '@angular/compiler/src/output/output_ast';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport abstract class BaseSettingsService {\n  abstract loadSettings(param: any): Observable<any>;\n}\n","import { Injectable } from '@angular/core';\n\nimport { BehaviorSubject } from 'rxjs';\n\nimport { LayoutContent, PageSetting } from '../models';\nimport { BaseSettingsService } from '../services/base-settings.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { map, tap } from 'rxjs/operators';\nimport { Observable } from 'rxjs/internal/Observable';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class DashboardService {\n\n  historyState: Array<LayoutContent> = [];\n  private subject = new BehaviorSubject<LayoutContent[]>(this.historyState);\n\n  constructor(private settingsService: BaseSettingsService) {\n\n  }\n\n  setState = (tracks: Array<LayoutContent>) => {\n    this.subject.next(tracks);\n  }\n\n  addItem = (item: PageSetting) => {\n    const state = this.subject.getValue();\n\n    if (state[0].items.indexOf(item) !== -1 || state[1].items.indexOf(item) !== -1) {\n      console.warn('Item with the same id exists on the dashboard.');\n      return;\n    }\n\n    state[0].items.length <= state[1].items.length ? state[0].items.push(item) : state[1].items.push(item);\n\n    this.subject.next(state);\n  }\n\n  removeItem = (item: PageSetting) => {\n    const state = this.subject.getValue();\n    state.forEach(track => {\n      track.items.forEach((i, index) => {\n        if (i === item) {\n          track.items.splice(index, 1);\n        }\n      });\n    });\n\n    this.subject.next(state);\n  }\n\n  loadContents = (id: any): Observable<Array<any>> => {\n    return this.settingsService.loadSettings(id).pipe(\n      map((state: Array<LayoutContent>) => {\n        this.historyState = state;\n        this.subject.next(this.historyState);\n        return state;\n      })\n    );\n  }\n}\n","import { Directive, ViewContainerRef, Input } from '@angular/core';\n\n@Directive({\n  selector: '[appLayouOutlet]',\n})\nexport class LayoutOutletDirective {\n  @Input() item;\n\n  constructor(public viewContainerRef: ViewContainerRef) {}\n}\n","import { NgModuleFactory, Type, InjectionToken } from '@angular/core';\n\nexport interface IMappedModules {\n    [key: string]: { load: () => Promise<NgModuleFactory<any> | Type<any>>; };\n}\n\nexport type DynamicModuleType = Type<any> & {\n    entryComponents: {};\n};\n\nexport const DYNAMIC_MODULES_MAP = new InjectionToken('DYNAMIC_MODULES_MAP');\n","import {\n  OnInit, ViewChildren,\n  QueryList, ChangeDetectorRef,\n  AfterViewInit, Compiler, NgModuleFactory, Injector, Inject, Component\n} from '@angular/core';\nimport { tap } from 'rxjs/operators';\nimport { LayoutOutletDirective } from './layout-outlet.directive';\nimport { PageSetting, LayoutContent } from '../models';\nimport { DashboardService } from './dynamic-layout.service';\nimport { IMappedModules, DynamicModuleType, DYNAMIC_MODULES_MAP } from './mapped-modules.interface';\nimport { TemplateCardContainer } from './template-card/template-card.container';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  template: ' ',\n})\nexport class BaseLayoutComponent implements OnInit, AfterViewInit {\n  @ViewChildren(LayoutOutletDirective) dashboardOutlet: QueryList<LayoutOutletDirective>;\n\n  containers: Array<LayoutContent> = [];\n  constructor(\n    protected cd: ChangeDetectorRef,\n    protected injector: Injector,\n    protected compiler: Compiler,\n    protected service: DashboardService,\n    private route: ActivatedRoute,\n    @Inject(DYNAMIC_MODULES_MAP) protected modulesMap: IMappedModules\n  ) { }\n\n  ngOnInit(): void {\n    const id = this.route.snapshot.params['id'];\n    this.service.loadContents(id).pipe(\n      tap(tracks => (this.containers = tracks))\n      /* Make sure to unsubscribe! */\n    )\n    .subscribe(() => {\n      this.cd.detectChanges();\n      this.loadContents();\n    });\n  }\n\n  ngAfterViewInit(): void {\n  }\n\n  loadContents = () => {\n    if (!this.dashboardOutlet || !this.dashboardOutlet.length) {\n      return;\n    }\n    this.dashboardOutlet.forEach(template => {\n      this.cd.detectChanges();\n      this.loadContent(template, template.item);\n    });\n    this.cd.detectChanges();\n  }\n\n  loadContent = async (template: LayoutOutletDirective, item: PageSetting) => {\n    if (!item.name) {\n      return;\n    }\n\n    const viewContainerRef = template.viewContainerRef;\n    viewContainerRef.clear();\n    const moduleOrFactory = await this.modulesMap[item.name].load();\n    let moduleFactory;\n    if (moduleOrFactory instanceof NgModuleFactory) {\n      moduleFactory = moduleOrFactory; // AOT\n    } else {\n      moduleFactory = await this.compiler.compileModuleAsync(moduleOrFactory); // JIT\n    }\n    const moduleRef = moduleFactory.create(this.injector);\n    console.log(item.cName);\n    const rootComponent = (moduleFactory.moduleType as DynamicModuleType).entryComponents[`${item.cName}ContainerComponent`];\n    const factory = moduleRef.componentFactoryResolver.resolveComponentFactory(rootComponent);\n    const componentRef = viewContainerRef.createComponent(factory);\n    const instance = componentRef.instance as TemplateCardContainer;\n    instance.item = item;\n  }\n\n  changed = (items: Array<PageSetting>, trackIndex: number) => {\n    const state = this.containers;\n    state[trackIndex].items = items as Array<PageSetting>;\n    this.service.setState(state);\n  }\n}\n","import {\n  Component, ChangeDetectorRef,\n  Compiler, Injector, Inject\n} from '@angular/core';\n\nimport { DashboardService } from '../dynamic-layout.service';\nimport { IMappedModules, DYNAMIC_MODULES_MAP } from '../mapped-modules.interface';\nimport { BaseLayoutComponent } from '../BaseLayoutComponent';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent extends BaseLayoutComponent {\n\n  constructor(\n    cd: ChangeDetectorRef,\n    injector: Injector,\n    compiler: Compiler,\n    dashboardService: DashboardService,\n    route: ActivatedRoute,\n    @Inject(DYNAMIC_MODULES_MAP) modulesMap: IMappedModules\n  ) {\n    super(cd, injector, compiler, dashboardService, route, modulesMap);\n  }\n}\n\n\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-template-card',\n  template: ``,\n})\nexport class TemplateCardComponent {}\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  template: ``,\n})\nexport class TemplateCardContainer {\n  @Input() item;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LayoutComponent, LayoutOutletDirective, TemplateCardComponent, TemplateCardContainer, BaseLayoutComponent } from '.';\n\n@NgModule({\n  declarations: [BaseLayoutComponent, LayoutComponent, LayoutOutletDirective, TemplateCardComponent, TemplateCardContainer],\n  imports: [CommonModule],\n  exports: [BaseLayoutComponent, LayoutComponent, LayoutOutletDirective, TemplateCardComponent, TemplateCardContainer]\n})\nexport class DynamicLayoutModule { }\n","/*\n * Public API Surface of dynamic-core\n */\nexport * from './lib/services/base-settings.service';\nexport * from './lib/dynamic-layout';\nexport * from './lib/models';\nexport * from './lib/dynamic-layout/dynamic-layout.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {BaseLayoutComponent as ɵa,LayoutComponent as ɵb,LayoutOutletDirective as ɵc,TemplateCardComponent as ɵd,TemplateCardContainer as ɵe} from './lib/dynamic-layout';"],"names":[],"mappings":"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"}